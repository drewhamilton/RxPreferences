import me.champeau.gradle.japicmp.JapicmpTask

configurations {
  baseline
  latest
}

def module = ':rxpreferences'
def artifact = 'rxpreferences'

dependencies {
  baseline("drewhamilton.rxpreferences:$artifact:$compatibleVersion") {
    transitive = false
    force = true
  }
  latest project(path: module, configuration: 'releaseRuntimeElements')
}

task japicmp(type: JapicmpTask) {
  oldClasspath = configurations.baseline.incoming.artifactView { config ->
    config.attributes { container ->
      container.attribute(Attribute.of("artifactType", String.class), "jar")
    }
  }.artifacts.artifactFiles

  newClasspath = configurations.latest.incoming.artifactView { config ->
    config.attributes { container ->
      container.attribute(Attribute.of("artifactType", String.class), "jar")
    }
  }.artifacts.artifactFiles

  onlyBinaryIncompatibleModified = true
  failOnModification = true
  txtOutputFile = file("$buildDir/reports/japi.txt")
  ignoreMissingClasses = true
  includeSynthetic = true

  dependsOn("$module:assembleRelease")
}

def check = tasks.create('check')
check.dependsOn(japicmp)

def build = tasks.create('build')
build.dependsOn(check)
